name: PR Validation

on:
  pull_request:
    branches: [main, master, develop]
    types: [opened, synchronize, reopened, ready_for_review]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Job 1: Lint and TypeScript validation
  lint-and-typescript:
    name: Lint & TypeScript
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run TypeScript check
        run: npm run build

  # Job 2: Unit tests
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm run test:unit

      - name: Upload unit test coverage
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-coverage
          path: coverage/
          retention-days: 7
        if: success()

  # Job 3: BDD tests with real database
  bdd-tests:
    name: BDD Tests (Real Database)
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: video_test_db
          POSTGRES_HOST_AUTH_METHOD: trust
        ports:
          - 5435:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Wait for PostgreSQL
        run: |
          echo "Waiting for PostgreSQL to be ready..."
          timeout 30s bash -c 'until pg_isready -h localhost -p 5435 -U test_user; do sleep 1; done'

      - name: Run BDD tests (Real Database)
        run: PRISMA_USER_CONSENT_FOR_DANGEROUS_AI_ACTION="yes" BDD_DATABASE_MODE=real NODE_ENV=test npm run test:bdd
        env:
          DATABASE_URL: postgresql://test_user:test_password@localhost:5435/video_test_db?schema=public

      - name: Upload BDD test reports
        uses: actions/upload-artifact@v4
        with:
          name: bdd-test-reports
          path: test/reports/
          retention-days: 7
        if: always()

  # Job 4: Security and dependency check
  security-check:
    name: Security & Dependencies
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level high

      - name: Check for outdated packages
        run: npm outdated
        continue-on-error: true

  # Job 5: Build verification
  build-verification:
    name: Build Verification
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: [lint-and-typescript]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Verify build artifacts
        run: |
          if [ -d "dist" ]; then
            echo "‚úÖ Build artifacts found in dist/"
            ls -la dist/
          else
            echo "‚ùå Build artifacts not found"
            exit 1
          fi

  # Final job: All checks passed
  all-checks-passed:
    name: All Checks Passed
    runs-on: ubuntu-latest
    needs: [lint-and-typescript, unit-tests, bdd-tests, security-check, build-verification]
    if: always()
    
    steps:
      - name: Check all job statuses
        run: |
          if [[ "${{ needs.lint-and-typescript.result }}" == "success" && 
                "${{ needs.unit-tests.result }}" == "success" && 
                "${{ needs.bdd-tests.result }}" == "success" && 
                "${{ needs.security-check.result }}" == "success" && 
                "${{ needs.build-verification.result }}" == "success" ]]; then
            echo "‚úÖ All validation checks passed!"
            echo "üöÄ PR is ready to be merged"
          else
            echo "‚ùå One or more validation checks failed:"
            echo "   - Lint & TypeScript: ${{ needs.lint-and-typescript.result }}"
            echo "   - Unit Tests: ${{ needs.unit-tests.result }}"
            echo "   - BDD Tests: ${{ needs.bdd-tests.result }}"
            echo "   - Security Check: ${{ needs.security-check.result }}"
            echo "   - Build Verification: ${{ needs.build-verification.result }}"
            echo "üõë Please fix the failing checks before merging"
            exit 1
          fi

      - name: Post success comment
        if: success()
        run: |
          echo "üéâ All validation checks passed successfully!"
          echo "üìä Summary:"
          echo "   ‚úÖ Code quality (lint + TypeScript)"
          echo "   ‚úÖ Unit tests with coverage"
          echo "   ‚úÖ BDD integration tests"
          echo "   ‚úÖ Security audit"
          echo "   ‚úÖ Build verification"